[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "royalapp"
dynamic = ["version"]
description = "An infinitely extensible and reusable applications framework."
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
keywords = []
authors = [
  { name = "Hanjin Liu", email = "liuhanjin.sc@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "numpy",
  "app_model>=0.2.7",
  "pydantic>=1.10",
  "pydantic_compat>=0.1.2",
  "qtpy>=2.3.1",
  "superqt[iconify]>=0.6.1",
  "magicgui>=0.9.1",
  "platformdirs",
  "pygments>=2.18.0",
  "pyyaml>=6.0.1",
  "pillow>=9.0.0",
]

[project.urls]
Documentation = "https://github.com/hanjinliu/royalapp#readme"
Issues = "https://github.com/hanjinliu/royalapp/issues"
Source = "https://github.com/hanjinliu/royalapp"

[project.scripts]
royalapp = "royalapp.__main__:main"

[project.optional-dependencies]
pyqt5 = ["pyqt5>=5.12.0"]
pyqt6 = ["pyqt6"]
testing = [
  "pytest",
  "pytest-qt",
]

[tool.hatch.version]
path = "src/royalapp/__init__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/royalapp tests}"

[tool.coverage.run]
source_pkgs = ["royalapp", "tests"]
branch = true
parallel = true
omit = [
  "src/royalapp/__init__.py",
]

[tool.coverage.paths]
royalapp = ["src/royalapp", "*/royalapp/src/royalapp"]
tests = ["tests", "*/royalapp/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:whitecanvas tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]
exclude_lines = [
  "if TYPE_CHECKING:",
]


[tool.hatch.envs.test]
features = ["testing"]

[tool.hatch.envs.test.scripts]
run = "pytest -v"

[[tool.hatch.envs.test.matrix]]
backend = ["pyqt5", "pyqt6"]

[tool.hatch.envs.test.overrides]
matrix.backend.features = [
  { value = "pyqt5", if = ["pyqt5"] },
  { value = "pyqt6", if = ["pyqt6"] },
]
